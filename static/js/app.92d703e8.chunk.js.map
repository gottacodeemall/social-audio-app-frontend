{"version":3,"sources":["constants/Colors.ts","hooks/useColorScheme.ts","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/ModalScreen.tsx","screens/NotFoundScreen.tsx","navigation/LinkingConfiguration.ts","components/Icons/Icon.tsx","components/Icons/Icons.tsx","redux/actions.ts","components/audioRecorder/AudioRecorder.tsx","http/http.ts","http/api.ts","screens/Dashboard.tsx","screens/Login.tsx","screens/Signup.tsx","components/audioPlayer/audioPlayer.tsx","screens/QuestionAnswer.tsx","screens/QuestionScreen.tsx","screens/DiscussionScreen.tsx","screens/MyQA.tsx","screens/Search.tsx","navigation/index.tsx","redux/reducers/audioReducer.ts","redux/reducers/genericReducer.ts","redux/reducers/combineReducers.ts","App.tsx","hooks/useCachedResources.ts","assets/fonts/SpaceMono-Regular.ttf","assets/images/record_button@2x.png","assets/images/record_icon@2x.png","assets/images/play_button@2x.png","assets/images/pause_button@2x.png","assets/images/stop_button@2x.png","assets/images/muted_button@2x.png","assets/images/unmuted_button@2x.png","assets/images/track_1@2x.png","assets/images/thumb_1@2x.png","assets/images/thumb_2@2x.png"],"names":["light","text","background","tint","tabIconDefault","tabIconSelected","dark","useColorScheme","_useColorScheme","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","MonoText","fontFamily","EditScreenInfo","path","styles","getStartedContainer","getStartedText","codeHighlightContainer","homeScreenFilename","helpContainer","TouchableOpacity","onPress","handleHelpPress","helpLink","helpLinkText","WebBrowser","StyleSheet","create","alignItems","marginHorizontal","marginVertical","borderRadius","paddingHorizontal","fontSize","lineHeight","textAlign","marginTop","paddingVertical","ModalScreen","container","title","separator","StatusBar","Platform","OS","flex","justifyContent","fontWeight","height","width","NotFoundScreen","navigation","replace","link","linkText","padding","linking","prefixes","Linking","config","screens","Root","Home","TabOneScreen","QA","TabTwoScreen","Record","Discussion","Profile","Modal","NotFound","Icon","module","this","Asset","fromModule","downloadAsync","RECORD_BUTTON","require","RECORDING","PLAY_BUTTON","STOP_BUTTON","MUTED_BUTTON","TRACK_1","THUMB_1","THUMB_2","updateState","action","item","type","payload","Dimensions","get","DEVICE_WIDTH","DEVICE_HEIGHT","AudioRecorder","useNavigation","recording","useRef","sound","isSeeking","shouldPlayAtEndOfSeek","recordingSettings","Audio","RECORDING_OPTIONS_PRESET_HIGH_QUALITY","useState","hasRecordingPermissions","setHasRecordingPermissions","isLoading","setIsLoading","isPlaybackAllowed","setIsPlaybackAllowed","muted","setMuted","soundPosition","setSoundPosition","soundDuration","setSoundDuration","recordingDuration","setRecordingDuration","shouldPlay","setShouldPlay","isPlaying","setIsPlaying","isRecording","setIsRecording","fontLoaded","setFontLoaded","shouldCorrectPitch","setShouldCorrectPitch","volume","setVolume","rate","setRate","dispatch","useDispatch","useEffect","updateRecordingUri","current","_askForPermission","a","async","requestPermissionsAsync","response","status","_updateScreenForSoundStatus","json","isLoaded","durationMillis","positionMillis","isMuted","_setStateFromAVIsNotLoaded","error","console","log","_updateScreenForRecordingStatus","canRecord","isDoneRecording","_stopRecordingAndEnablePlayback","stopAndUnloadAsync","code","message","name","FileSystem","getURI","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","createNewLoadedSoundAsync","isLooping","_getMMSSFromMillis","millis","totalSeconds","seconds","Math","floor","padWithZero","number","string","toString","uri","halfScreenContainer","opacity","recordingContainer","TouchableHighlight","underlayColor","wrapper","unloadAsync","setOnPlaybackStatusUpdate","setOnRecordingStatusUpdate","newRecording","Recording","prepareToRecordAsync","startAsync","_stopPlaybackAndBeginRecording","disabled","circularIcon","FontAwesome","size","Feather","recordingDataContainer","liveText","recordingDataRowContainer","FontAwesome5","recordingTimestamp","innerHalfScreenContainer","playbackContainer","playbackSlider","trackImage","Icons","thumbImage","value","onValueChange","pauseAsync","onSlidingComplete","seekPosition","playFromPositionAsync","setPositionAsync","playbackTimestamp","buttonsContainerBase","buttonsContainerTopRow","volumeContainer","setIsMutedAsync","Ionicons","volumeSlider","setVolumeAsync","playStopContainer","playAsync","AntDesign","stopAsync","saveandBackStyle","Button","mode","goBack","undefined","route","params","postSaveRedirection","redirectionString","redirectionParams","postSaveRedirectionParams","postSaveExecutor","postSaveExecutorParams","audio","then","navigate","catch","saveAudio","noPermissionsText","emptyContainer","StatusCode","alignSelf","flexDirection","minHeight","maxHeight","minWidth","maxWidth","paddingLeft","paddingRight","image","textButton","buttonsContainerBottomRow","rateSlider","typeOfFile","headers","Accept","injectToken","token","localStorage","getItem","Authorization","Error","instance","initHttp","http","axios","baseURL","withCredentials","interceptors","request","use","Promise","reject","handleError","url","data","post","put","delete","InternalServerError","Forbidden","Unauthorized","TooManyRequests","login","email","password","queryUrl","fetch","signup","firstName","lastName","age","gender","ethnicity","intro","phoneNumber","method","body","JSON","stringify","sex","fetchQuestions","fetchQuestionsForYou","loggedIn","getQuestion","questionId","getAnswer","getQuestionsForSearchQueryApi","query","saveQuestionApi","question","Thumbnail","uploadFileToS3","Image","success","alert","getPendingDiscussions","loggedInUser","parameters","user_id","question_id","getAcceptedDiscussions","saveAnswerApi","answer","requestChat","answerId","getMyQuestions","getPrefix","objectType","getFileType","fileUri","fileType","substring","lastIndexOf","file","uuidv4","options","keyPrefix","bucket","region","accessKey","secretKey","successActionStatus","RNS3","postResponse","location","cardStyles","display","card","margin","overflow","borderWidth","cardCover","cardContent","cardCaption","cardPosted","MyComponent","isFocused","useIsFocused","React","currentScreen","setCurrentScreen","setResponse","trending","setTrending","latest","setLatest","setLocation","foryou","setforyou","useSelector","state","generic","forEach","category","homePageCategory","questions","switchScreens","loaderContainer","textHeading","marginLeft","buttonsContainer","marginBottom","ScrollView","contentContainerStyle","flexGrow","ActivityIndicator","animating","horizontal","map","Card","key","Cover","source","Content","Title","numberOfLines","ellipsizeMode","caption","Paragraph","postedBy","createNativeStackNavigator","inputView","borderColor","TextInput","loginBtn","textColor","loginTextInput","Login","setEmail","setPassword","setSucess","placeholder","onChangeText","secureTextEntry","Pressable","pressed","Signup","setFirstName","setLastName","setAge","setGender","setEthnicity","setIntro","setPhoneNumber","scrollView","fieldContainer","paddingTop","AudioPlayer","Sound","recordedUri","loadAsync","loadedAudio","info","UnloadAudio","getAudio","getStatusAsync","mainContainer","playerStatus","PlayRecordedAudio","isSliderEnabled","isTimerEnabled","QuestionAnswer","setImage","setCaption","hashtags","setHashtags","setPostedBy","setAudio","answers","setAnswers","mainContainerWrapper","questionContainer","questionImageContainer","questionAudioContainer","captionContainer","textSubHeading","answerThisQuestionContainer","answeredBy","answersContainer","answerContainer","answerBottomContainer","input","QuestionScreen","onCaptionChange","onHashtagsChange","users","onUsersChange","onLocationChange","recordingUri","_setDisabledForSave","generateJSON","taggedUsers","categories","isPublished","questionStatus","ImagePicker","mediaTypes","All","allowsEditing","aspect","quality","result","cancelled","saveQuestionAsDraft","publishStyles","saveQuestion","saveQuestionAsAnonymous","DiscussionScreen","rerender","forcererender","pendingItems","setPendingItems","acceptedItems","setAcceptedItems","discussions","apiCalls","onDiscussionAccepted","discussionAccepted","cardContainer","posted_by","cardStyle","cardLeft","paragraph","cardRightButtons","roundButtonLeft","roundButtonRight","cardRight","meeting_info","marginRight","MyQA","setQuestions","getquestions","screen","Search","searchQuery","setSearchQuery","getQuestionsForSearchQuery","Searchbar","autoComplete","Navigation","colorScheme","NavigationContainer","LinkingConfiguration","DarkTheme","DefaultTheme","RootNavigator","RootNavigator1","Stack","Navigator","Screen","component","BottomTabNavigator","headerShown","Group","screenOptions","presentation","Stack1","BottomTabNavigator1","Dashboard","BottomTab1","createBottomTabNavigator","initialRouteName","tabBarActiveTintColor","tabBarIcon","BottomTab","children","Octicons","INITIAL_STATE","rootReducer","combineReducers","store","createStore","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","exports"],"mappings":"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","file":"static/js/app.92d703e8.chunk.js","sourcesContent":["const tintColorLight = '#2f95dc';\r\nconst tintColorDark = '#fff';\r\n\r\nexport default {\r\n  light: {\r\n    text: '#000',\r\n    background: '#fff',\r\n    tint: tintColorLight,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorLight,\r\n  },\r\n  dark: {\r\n    text: '#fff',\r\n    background: '#000',\r\n    tint: tintColorDark,\r\n    tabIconDefault: '#ccc',\r\n    tabIconSelected: tintColorDark,\r\n  },\r\n};\r\n\r\nexport const spotifyDark = '#191414';\r\nexport const spotifyGreen = '#1DB954';\r\nexport const textColor = 'white';\r\nexport const overallColorScheme = 'dark';\r\nexport const statusBarColorScheme = 'light';\r\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\r\n\r\n// The useColorScheme value is always either light or dark, but the built-in\r\n// type suggests that it can be null. This will not happen in practice, so this\r\n// makes it a bit easier to work with.\r\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\r\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\r\n}\r\n","/**\r\n * Learn more about Light and Dark modes:\r\n * https://docs.expo.io/guides/color-schemes/\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\n\r\nexport function useThemeColor(\r\n  props: { light?: string; dark?: string },\r\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\r\n) {\r\n  const theme = useColorScheme();\r\n  const colorFromProps = props[theme];\r\n\r\n  if (colorFromProps) {\r\n    return colorFromProps;\r\n  } else {\r\n    return Colors[theme][colorName];\r\n  }\r\n}\r\n\r\ntype ThemeProps = {\r\n  lightColor?: string;\r\n  darkColor?: string;\r\n};\r\n\r\nexport type TextProps = ThemeProps & DefaultText['props'];\r\nexport type ViewProps = ThemeProps & DefaultView['props'];\r\n\r\nexport function Text(props: TextProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\r\n\r\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\r\n}\r\n\r\nexport function View(props: ViewProps) {\r\n  const { style, lightColor, darkColor, ...otherProps } = props;\r\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\r\n\r\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Text, TextProps } from './Themed';\r\n\r\nexport function MonoText(props: TextProps) {\r\n  return <Text {...props} style={[props.style, { fontFamily: 'space-mono' }]} />;\r\n}\r\n","import * as WebBrowser from 'expo-web-browser';\r\nimport React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport { MonoText } from './StyledText';\r\nimport { Text, View } from './Themed';\r\n\r\nexport default function EditScreenInfo({ path }: { path: string }) {\r\n  return (\r\n    <View>\r\n      <View style={styles.getStartedContainer}>\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Open up the code for this screen:\r\n        </Text>\r\n\r\n        <View\r\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\r\n          darkColor=\"rgba(255,255,255,0.05)\"\r\n          lightColor=\"rgba(0,0,0,0.05)\">\r\n          <MonoText>{path}</MonoText>\r\n        </View>\r\n\r\n        <Text\r\n          style={styles.getStartedText}\r\n          lightColor=\"rgba(0,0,0,0.8)\"\r\n          darkColor=\"rgba(255,255,255,0.8)\">\r\n          Change any of the text, save the file, and your app will automatically update.\r\n        </Text>\r\n      </View>\r\n\r\n      <View style={styles.helpContainer}>\r\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\r\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\r\n            Tap here if your app doesn't automatically update after making changes\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction handleHelpPress() {\r\n  WebBrowser.openBrowserAsync(\r\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  getStartedContainer: {\r\n    alignItems: 'center',\r\n    marginHorizontal: 50,\r\n  },\r\n  homeScreenFilename: {\r\n    marginVertical: 7,\r\n  },\r\n  codeHighlightContainer: {\r\n    borderRadius: 3,\r\n    paddingHorizontal: 4,\r\n  },\r\n  getStartedText: {\r\n    fontSize: 17,\r\n    lineHeight: 24,\r\n    textAlign: 'center',\r\n  },\r\n  helpContainer: {\r\n    marginTop: 15,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n  },\r\n  helpLink: {\r\n    paddingVertical: 15,\r\n  },\r\n  helpLinkText: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport * as React from 'react';\r\nimport { Platform, StyleSheet } from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nexport default function ModalScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Modal</Text>\r\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n      <EditScreenInfo path=\"/screens/ModalScreen.tsx\" />\r\n\r\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\r\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Text, View } from '../components/Themed';\r\n\r\nimport { RootStackScreenProps } from '../types';\r\n\r\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>This screen doesn't exist.</Text>\r\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\r\n        <Text style={styles.linkText}>Go to home screen!</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  link: {\r\n    marginTop: 15,\r\n    paddingVertical: 15,\r\n  },\r\n  linkText: {\r\n    fontSize: 14,\r\n    color: '#2e78b7',\r\n  },\r\n});\r\n","/**\r\n * Learn more about deep linking with React Navigation\r\n * https://reactnavigation.org/docs/deep-linking\r\n * https://reactnavigation.org/docs/configuring-links\r\n */\r\n\r\nimport { LinkingOptions } from '@react-navigation/native';\r\nimport * as Linking from 'expo-linking';\r\n\r\nimport { RootStackParamList } from '../types';\r\n\r\nconst linking: LinkingOptions<RootStackParamList> = {\r\n  prefixes: [Linking.makeUrl('/')],\r\n  config: {\r\n    screens: {\r\n      Root: {\r\n        screens: {\r\n          Home: {\r\n            screens: {\r\n              TabOneScreen: 'home',\r\n            },\r\n          },\r\n          QA: {\r\n            screens: {\r\n              TabTwoScreen: 'qa',\r\n            },\r\n          },\r\n          Record: {\r\n            screens: {\r\n              TabTwoScreen: 'record',\r\n            },\r\n          },\r\n          Discussion: {\r\n            screens: {\r\n              TabTwoScreen: 'discussion',\r\n            },\r\n          },\r\n          Profile: {\r\n            screens: {\r\n              TabTwoScreen: 'profile',\r\n            },\r\n          },\r\n        },\r\n      },\r\n      Modal: 'modal',\r\n      NotFound: '*',\r\n    },\r\n  },\r\n};\r\n\r\nexport default linking;\r\n","import { Asset } from 'expo-asset';\r\n\r\nexport default class Icon {\r\n  readonly module: any;\r\n  readonly width: number;\r\n  readonly height: number;\r\n\r\n  constructor(module: any, width: number, height: number) {\r\n    this.module = module;\r\n    this.width = width;\r\n    this.height = height;\r\n    Asset.fromModule(this.module).downloadAsync();\r\n  }\r\n}\r\n","import Icon from './Icon';\r\n\r\nexport const RECORD_BUTTON = new Icon(require('../../assets/images/record_button@2x.png'), 70, 119);\r\nexport const RECORDING = new Icon(require('../../assets/images/record_icon@2x.png'), 20, 14);\r\n\r\nexport const PLAY_BUTTON = new Icon(require('../../assets/images/play_button@2x.png'), 34, 51);\r\nexport const PAUSE_BUTTON = new Icon(require('../../assets/images/pause_button@2x.png'), 34, 51);\r\nexport const STOP_BUTTON = new Icon(require('../../assets/images/stop_button@2x.png'), 22, 22);\r\n\r\nexport const MUTED_BUTTON = new Icon(require('../../assets/images/muted_button@2x.png'), 67, 58);\r\nexport const UNMUTED_BUTTON = new Icon(\r\n  require('../../assets/images/unmuted_button@2x.png'),\r\n  67,\r\n  58\r\n);\r\n\r\nexport const TRACK_1 = new Icon(require('../../assets/images/track_1@2x.png'), 166, 5);\r\nexport const THUMB_1 = new Icon(require('../../assets/images/thumb_1@2x.png'), 18, 19);\r\nexport const THUMB_2 = new Icon(require('../../assets/images/thumb_2@2x.png'), 15, 19);\r\n","export const updateState = (action: string, item: any) => ({\r\n  type: action,\r\n  payload: item,\r\n});\r\n\r\nexport const audioUpdateRecordingURI = 'UPDATE_RECORDING_URI';\r\n\r\nexport const updateIsUserLoggedIn = 'UPDATE_USER_ISLOGGEDIN';\r\n","import React, { MutableRefObject, useEffect, useState } from 'react';\r\nimport { Dimensions, Image, StyleSheet, Text, TouchableHighlight, View } from 'react-native';\r\nimport Slider from '@react-native-community/slider';\r\nimport * as Icons from '../Icons/Icons';\r\nimport { Audio, AVPlaybackStatus } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { useRef } from 'react';\r\nimport { AntDesign, Feather, FontAwesome, FontAwesome5, Ionicons } from '@expo/vector-icons';\r\nimport { Button } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { audioUpdateRecordingURI, updateState } from '../../redux/actions';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../../constants/Colors';\r\n\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#EEEEEE';\r\nconst greyColor = '#000000';\r\nconst LIVE_COLOR = '#FF0000';\r\nconst DISABLED_OPACITY = 0.5;\r\n\r\nexport default function AudioRecorder(props) {\r\n  const navigation = useNavigation();\r\n  let recording: MutableRefObject<Audio.Recording | null> = useRef(null);\r\n  let sound: MutableRefObject<Audio.Sound | null> = useRef(null);\r\n  let isSeeking: MutableRefObject<boolean> = useRef(false);\r\n  let shouldPlayAtEndOfSeek: MutableRefObject<boolean> = useRef(false);\r\n  const recordingSettings: MutableRefObject<Audio.RecordingOptions> = useRef(\r\n    Audio.RECORDING_OPTIONS_PRESET_HIGH_QUALITY\r\n  );\r\n\r\n  const [hasRecordingPermissions, setHasRecordingPermissions] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isPlaybackAllowed, setIsPlaybackAllowed] = useState<boolean>(false);\r\n  const [muted, setMuted] = useState<boolean>(false);\r\n  const [soundPosition, setSoundPosition] = useState<number | null>(null);\r\n  const [soundDuration, setSoundDuration] = useState<number | null>(null);\r\n  const [recordingDuration, setRecordingDuration] = useState<number | null>(null);\r\n  const [shouldPlay, setShouldPlay] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const [isRecording, setIsRecording] = useState<boolean>(false);\r\n  const [fontLoaded, setFontLoaded] = useState<boolean>(false);\r\n  const [shouldCorrectPitch, setShouldCorrectPitch] = useState<boolean>(false);\r\n  const [volume, setVolume] = useState<number>(1.0);\r\n  const [rate, setRate] = useState<number>(1.0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setFontLoaded(true);\r\n    updateRecordingUri('');\r\n    sound.current = null;\r\n    recording.current = null;\r\n    _askForPermission();\r\n  }, []);\r\n\r\n  const _askForPermission = async () => {\r\n    const response = await Audio.requestPermissionsAsync();\r\n    setHasRecordingPermissions(response.status === 'granted');\r\n  };\r\n\r\n  const _setStateFromAVIsLoaded = (json: any) => {\r\n    setSoundDuration(json.soundDuration);\r\n    setSoundPosition(json.soundPosition);\r\n    setShouldPlay(json.shouldPlay);\r\n    setIsPlaying(json.isPlaying);\r\n    setRate(json.rate);\r\n    setMuted(json.muted);\r\n    setVolume(json.volume);\r\n    setShouldCorrectPitch(json.shouldCorrectPitch);\r\n    setIsPlaybackAllowed(json.isPlaybackAllowed);\r\n  };\r\n\r\n  const _setStateFromAVIsNotLoaded = (json: any) => {\r\n    setSoundDuration(json.soundDuration);\r\n    setSoundPosition(json.soundPosition);\r\n    setIsPlaybackAllowed(json.isPlaybackAllowed);\r\n  };\r\n\r\n  const _updateScreenForSoundStatus = (status: AVPlaybackStatus) => {\r\n    if (status.isLoaded) {\r\n      _setStateFromAVIsLoaded({\r\n        soundDuration: status.durationMillis ?? null,\r\n        soundPosition: status.positionMillis,\r\n        shouldPlay: status.shouldPlay,\r\n        isPlaying: status.isPlaying,\r\n        rate: status.rate,\r\n        muted: status.isMuted,\r\n        volume: status.volume,\r\n        shouldCorrectPitch: status.shouldCorrectPitch,\r\n        isPlaybackAllowed: true,\r\n      });\r\n    } else {\r\n      _setStateFromAVIsNotLoaded({\r\n        soundDuration: null,\r\n        soundPosition: null,\r\n        isPlaybackAllowed: false,\r\n      });\r\n      if (status.error) {\r\n        console.log(`FATAL PLAYER ERROR: ${status.error}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _updateScreenForRecordingStatus = (status: Audio.RecordingStatus) => {\r\n    if (status.canRecord) {\r\n      setIsRecording(status.isRecording);\r\n      setRecordingDuration(status.durationMillis);\r\n    } else if (status.isDoneRecording) {\r\n      setIsRecording(false);\r\n      setRecordingDuration(status.durationMillis);\r\n      if (!isLoading) {\r\n        _stopRecordingAndEnablePlayback();\r\n      }\r\n    }\r\n  };\r\n\r\n  const _stopPlaybackAndBeginRecording = async () => {\r\n    setIsLoading(true);\r\n    if (sound.current !== null) {\r\n      await sound.current.unloadAsync();\r\n      sound.current.setOnPlaybackStatusUpdate(null);\r\n      sound.current = null;\r\n    }\r\n    await Audio.setAudioModeAsync({\r\n      allowsRecordingIOS: true,\r\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n      playsInSilentModeIOS: true,\r\n      shouldDuckAndroid: true,\r\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n      playThroughEarpieceAndroid: false,\r\n      staysActiveInBackground: true,\r\n    });\r\n    if (recording.current !== null) {\r\n      recording.current.setOnRecordingStatusUpdate(null);\r\n      recording.current = null;\r\n    }\r\n\r\n    const newRecording = new Audio.Recording();\r\n    await newRecording.prepareToRecordAsync(recordingSettings.current);\r\n    newRecording.setOnRecordingStatusUpdate(_updateScreenForRecordingStatus);\r\n\r\n    recording.current = newRecording;\r\n    await recording.current.startAsync(); // Will call this._updateScreenForRecordingStatus to update the screen.\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const _stopRecordingAndEnablePlayback = async () => {\r\n    setIsLoading(true);\r\n    if (!recording.current) {\r\n      return;\r\n    }\r\n    try {\r\n      await recording.current.stopAndUnloadAsync();\r\n    } catch (error) {\r\n      // On Android, calling stop before any data has been collected results in\r\n      // an E_AUDIO_NODATA error. This means no audio data has been written to\r\n      // the output file is invalid.\r\n      if (error.code === 'E_AUDIO_NODATA') {\r\n        console.log(\r\n          `Stop was called too quickly, no data has yet been received (${error.message})`\r\n        );\r\n      } else {\r\n        console.log('STOP ERROR: ', error.code, error.name, error.message);\r\n      }\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const info = await FileSystem.getInfoAsync(recording.current.getURI() || '');\r\n    await Audio.setAudioModeAsync({\r\n      allowsRecordingIOS: false,\r\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n      playsInSilentModeIOS: true,\r\n      shouldDuckAndroid: true,\r\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n      playThroughEarpieceAndroid: false,\r\n      staysActiveInBackground: true,\r\n    });\r\n    const response = await recording.current.createNewLoadedSoundAsync(\r\n      {\r\n        isLooping: true,\r\n        isMuted: muted,\r\n        volume: volume,\r\n        rate: rate,\r\n        shouldCorrectPitch: shouldCorrectPitch,\r\n      },\r\n      _updateScreenForSoundStatus\r\n    );\r\n    sound.current = response.sound;\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // DOM Interactions\r\n\r\n  const _onRecordPressed = () => {\r\n    if (isRecording) {\r\n      _stopRecordingAndEnablePlayback();\r\n    } else {\r\n      _stopPlaybackAndBeginRecording();\r\n    }\r\n  };\r\n\r\n  const _onPlayPausePressed = () => {\r\n    if (sound.current != null) {\r\n      if (isPlaying) {\r\n        sound.current.pauseAsync();\r\n      } else {\r\n        sound.current.playAsync();\r\n      }\r\n    }\r\n  };\r\n\r\n  const _onStopPressed = () => {\r\n    if (sound.current != null) {\r\n      sound.current.stopAsync();\r\n    }\r\n  };\r\n\r\n  const _onMutePressed = () => {\r\n    if (sound.current != null) {\r\n      sound.current.setIsMutedAsync(!muted);\r\n    }\r\n  };\r\n\r\n  const _onVolumeSliderValueChange = (value: number) => {\r\n    if (sound.current != null) {\r\n      sound.current.setVolumeAsync(value);\r\n    }\r\n  };\r\n\r\n  const _onSeekSliderValueChange = (value: number) => {\r\n    if (sound.current != null && !isSeeking.current) {\r\n      isSeeking.current = true;\r\n      shouldPlayAtEndOfSeek.current = shouldPlay;\r\n      sound.current.pauseAsync();\r\n    }\r\n  };\r\n\r\n  const _onSeekSliderSlidingComplete = async (value: number) => {\r\n    if (sound.current != null) {\r\n      isSeeking.current = false;\r\n      const seekPosition = value * (soundDuration || 0);\r\n      if (shouldPlayAtEndOfSeek.current) {\r\n        sound.current.playFromPositionAsync(seekPosition);\r\n      } else {\r\n        sound.current.setPositionAsync(seekPosition);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _getSeekSliderPosition = () => {\r\n    if (sound.current != null && soundPosition != null && soundDuration != null) {\r\n      return soundPosition / soundDuration;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const _getMMSSFromMillis = (millis: number) => {\r\n    const totalSeconds = millis / 1000;\r\n    const seconds = Math.floor(totalSeconds % 60);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n\r\n    const padWithZero = (number: number) => {\r\n      const string = number.toString();\r\n      if (number < 10) {\r\n        return '0' + string;\r\n      }\r\n      return string;\r\n    };\r\n    return padWithZero(minutes) + ':' + padWithZero(seconds);\r\n  };\r\n\r\n  const _getPlaybackTimestamp = () => {\r\n    if (sound.current != null && soundPosition != null && soundDuration != null) {\r\n      return `${_getMMSSFromMillis(soundPosition)} / ${_getMMSSFromMillis(soundDuration)}`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const _getRecordingTimestamp = () => {\r\n    if (recordingDuration != null) {\r\n      return `${_getMMSSFromMillis(recordingDuration)}`;\r\n    }\r\n    return `${_getMMSSFromMillis(0)}`;\r\n  };\r\n\r\n  const updateRecordingUri = (uri: string | undefined) => {\r\n    dispatch(updateState(audioUpdateRecordingURI, uri));\r\n  };\r\n\r\n  const saveAudio = () => {\r\n    if (recording.current) {\r\n      const uri = recording.current.getURI();\r\n      updateRecordingUri(uri ?? undefined);\r\n      if (props?.route?.params?.postSaveRedirection) {\r\n        const redirectionString = props.route.params.postSaveRedirection,\r\n          redirectionParams = props.route.params.postSaveRedirectionParams,\r\n          postSaveExecutor = props.route.params.postSaveExecutor,\r\n          postSaveExecutorParams = props.route.params.postSaveExecutorParams;\r\n        postSaveExecutorParams.audio = uri;\r\n        postSaveExecutor(postSaveExecutorParams)\r\n          .then(() => {\r\n            console.log('navigating away');\r\n            navigation.navigate(redirectionString, redirectionParams);\r\n          })\r\n          .catch((error) => console.log('error at audio recorder', error));\r\n      } else {\r\n        navigation.navigate('Question');\r\n      }\r\n    } else {\r\n      updateRecordingUri(undefined);\r\n    }\r\n  };\r\n\r\n  const navigateAway = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!fontLoaded ? (\r\n        <View style={styles.emptyContainer} />\r\n      ) : !hasRecordingPermissions ? (\r\n        <View style={styles.container}>\r\n          <View />\r\n          <Text style={[styles.noPermissionsText]}>\r\n            You must enable audio recording permissions in order to use this app.\r\n          </Text>\r\n          <View />\r\n        </View>\r\n      ) : (\r\n        <>\r\n          <View style={styles.container}>\r\n            <View\r\n              style={[\r\n                styles.halfScreenContainer,\r\n                {\r\n                  opacity: isLoading ? DISABLED_OPACITY : 1.0,\r\n                },\r\n              ]}\r\n            >\r\n              <View />\r\n              <View style={styles.recordingContainer}>\r\n                <View />\r\n                <TouchableHighlight\r\n                  underlayColor={BACKGROUND_COLOR}\r\n                  style={styles.wrapper}\r\n                  onPress={_onRecordPressed}\r\n                  disabled={isLoading}\r\n                >\r\n                  <View style={styles.circularIcon}>\r\n                    {!isRecording ? (\r\n                      <Feather name=\"mic\" size={80} color={spotifyDark} />\r\n                    ) : (\r\n                      <FontAwesome name=\"stop\" size={50} color={spotifyDark} />\r\n                    )}\r\n                  </View>\r\n                </TouchableHighlight>\r\n                <View style={styles.recordingDataContainer}>\r\n                  <View />\r\n                  <Text style={[styles.liveText]}>{isRecording ? 'LIVE' : ''}</Text>\r\n                  <View style={styles.recordingDataRowContainer}>\r\n                    {isRecording ? (\r\n                      <FontAwesome5 name=\"record-vinyl\" size={24} color=\"red\" />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                    <Text style={[styles.recordingTimestamp]}>{_getRecordingTimestamp()}</Text>\r\n                  </View>\r\n                  <View />\r\n                </View>\r\n                <View />\r\n              </View>\r\n              <View />\r\n            </View>\r\n            <View\r\n              style={[\r\n                styles.halfScreenContainer,\r\n                {\r\n                  opacity: !isPlaybackAllowed || isLoading ? DISABLED_OPACITY : 1.0,\r\n                },\r\n              ]}\r\n            >\r\n              <View style={styles.innerHalfScreenContainer}>\r\n                <View style={styles.playbackContainer}>\r\n                  <Slider\r\n                    style={styles.playbackSlider}\r\n                    trackImage={Icons.TRACK_1.module}\r\n                    thumbImage={Icons.THUMB_1.module}\r\n                    value={_getSeekSliderPosition()}\r\n                    onValueChange={_onSeekSliderValueChange}\r\n                    onSlidingComplete={_onSeekSliderSlidingComplete}\r\n                    disabled={!isPlaybackAllowed || isLoading}\r\n                  />\r\n                  <Text style={[styles.playbackTimestamp]}>{_getPlaybackTimestamp()}</Text>\r\n                </View>\r\n                <View style={[styles.buttonsContainerBase, styles.buttonsContainerTopRow]}>\r\n                  <View style={styles.volumeContainer}>\r\n                    <TouchableHighlight\r\n                      underlayColor={BACKGROUND_COLOR}\r\n                      style={styles.wrapper}\r\n                      onPress={_onMutePressed}\r\n                      disabled={!isPlaybackAllowed || isLoading}\r\n                    >\r\n                      {muted ? (\r\n                        <Ionicons name=\"md-volume-mute-outline\" size={35} color={greyColor} />\r\n                      ) : (\r\n                        <Ionicons name=\"volume-high-outline\" size={35} color={greyColor} />\r\n                      )}\r\n                    </TouchableHighlight>\r\n                    <Slider\r\n                      style={styles.volumeSlider}\r\n                      trackImage={Icons.TRACK_1.module}\r\n                      thumbImage={Icons.THUMB_2.module}\r\n                      value={1}\r\n                      onValueChange={_onVolumeSliderValueChange}\r\n                      disabled={!isPlaybackAllowed || isLoading}\r\n                    />\r\n                  </View>\r\n                  <View style={styles.playStopContainer}>\r\n                    <TouchableHighlight\r\n                      underlayColor={BACKGROUND_COLOR}\r\n                      style={styles.wrapper}\r\n                      onPress={_onPlayPausePressed}\r\n                      disabled={!isPlaybackAllowed || isLoading}\r\n                    >\r\n                      {!isPlaying ? (\r\n                        <Feather name=\"play\" size={24} color={greyColor} />\r\n                      ) : (\r\n                        <AntDesign name=\"pause\" size={24} color={greyColor} />\r\n                      )}\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight\r\n                      underlayColor={BACKGROUND_COLOR}\r\n                      style={styles.wrapper}\r\n                      onPress={_onStopPressed}\r\n                      disabled={!isPlaybackAllowed || isLoading}\r\n                    >\r\n                      <Ionicons name=\"stop-outline\" size={24} color={greyColor} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                  <View />\r\n                </View>\r\n                <View />\r\n                <View style={styles.saveandBackStyle}>\r\n                  <Button mode=\"text\" onPress={() => navigateAway()}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button disabled={soundDuration == null} mode=\"text\" onPress={() => saveAudio()}>\r\n                    Save\r\n                  </Button>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circularIcon: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100,\r\n    backgroundColor: spotifyGreen,\r\n  },\r\n  emptyContainer: {\r\n    alignSelf: 'stretch',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    minHeight: DEVICE_HEIGHT,\r\n    maxHeight: DEVICE_HEIGHT,\r\n  },\r\n  noPermissionsText: {\r\n    textAlign: 'center',\r\n  },\r\n  wrapper: {},\r\n  halfScreenContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n    minHeight: DEVICE_HEIGHT / 2.0,\r\n    maxHeight: DEVICE_HEIGHT / 2.0,\r\n  },\r\n  innerHalfScreenContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n  },\r\n  saveandBackStyle: {\r\n    flexDirection: 'row',\r\n    minHeight: DEVICE_HEIGHT / 4.0,\r\n    minWidth: DEVICE_WIDTH / 4.0,\r\n  },\r\n  recordingContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n    minHeight: Icons.RECORD_BUTTON.height,\r\n    maxHeight: Icons.RECORD_BUTTON.height,\r\n  },\r\n  recordingDataContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    minHeight: Icons.RECORD_BUTTON.height,\r\n    maxHeight: Icons.RECORD_BUTTON.height,\r\n    minWidth: Icons.RECORD_BUTTON.width * 3.0,\r\n    maxWidth: Icons.RECORD_BUTTON.width * 3.0,\r\n  },\r\n  recordingDataRowContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    minHeight: Icons.RECORDING.height,\r\n    maxHeight: Icons.RECORDING.height * 2,\r\n  },\r\n  playbackContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n    minHeight: Icons.THUMB_1.height * 2.0,\r\n    maxHeight: Icons.THUMB_1.height * 2.0,\r\n  },\r\n  playbackSlider: {\r\n    alignSelf: 'stretch',\r\n  },\r\n  liveText: {\r\n    color: LIVE_COLOR,\r\n  },\r\n  recordingTimestamp: {\r\n    paddingLeft: 20,\r\n  },\r\n  playbackTimestamp: {\r\n    textAlign: 'right',\r\n    alignSelf: 'stretch',\r\n    paddingRight: 20,\r\n  },\r\n  image: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  textButton: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    padding: 10,\r\n  },\r\n  buttonsContainerBase: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  buttonsContainerTopRow: {\r\n    maxHeight: Icons.MUTED_BUTTON.height,\r\n    alignSelf: 'stretch',\r\n    paddingRight: 20,\r\n  },\r\n  playStopContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    minWidth: ((Icons.PLAY_BUTTON.width + Icons.STOP_BUTTON.width) * 3.0) / 2.0,\r\n    maxWidth: ((Icons.PLAY_BUTTON.width + Icons.STOP_BUTTON.width) * 3.0) / 2.0,\r\n  },\r\n  volumeContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around',\r\n    minWidth: DEVICE_WIDTH / 2.0,\r\n    maxWidth: DEVICE_WIDTH / 2.0,\r\n  },\r\n  volumeSlider: {\r\n    width: DEVICE_WIDTH / 2.0 - Icons.MUTED_BUTTON.width,\r\n  },\r\n  buttonsContainerBottomRow: {\r\n    maxHeight: Icons.THUMB_1.height,\r\n    alignSelf: 'stretch',\r\n    paddingRight: 20,\r\n    paddingLeft: 20,\r\n  },\r\n  rateSlider: {\r\n    width: DEVICE_WIDTH / 2.0,\r\n  },\r\n});\r\n","// http.ts\r\n// https://altrim.io/posts/axios-http-client-using-typescript\r\nimport axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nenum StatusCode {\r\n  Unauthorized = 401,\r\n  Forbidden = 403,\r\n  TooManyRequests = 429,\r\n  InternalServerError = 500,\r\n}\r\n\r\nconst headers: Readonly<Record<string, string>> = {\r\n  Accept: 'application/json',\r\n  'Content-Type': 'application/json; charset=utf-8',\r\n  'Access-Control-Allow-Credentials': 'true',\r\n  'X-Requested-With': 'XMLHttpRequest',\r\n};\r\n\r\n// We can use the following function to inject the JWT token through an interceptor\r\n// We get the `accessToken` from the localStorage that we set when we authenticate\r\nconst injectToken = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n  try {\r\n    const token = localStorage.getItem('accessToken');\r\n\r\n    if (token != null && config && config.headers) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  } catch (error: any) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nclass Http {\r\n  private instance: AxiosInstance | null = null;\r\n\r\n  private get http(): AxiosInstance {\r\n    return this.instance != null ? this.instance : this.initHttp();\r\n  }\r\n\r\n  initHttp() {\r\n    const http = axios.create({\r\n      baseURL: 'https://74pataqajg.execute-api.us-east-1.amazonaws.com/test',\r\n      headers,\r\n      withCredentials: true,\r\n    });\r\n\r\n    http.interceptors.request.use(injectToken, (error: any) => Promise.reject(error));\r\n\r\n    http.interceptors.response.use(\r\n      (response: any) => response,\r\n      (error: any) => {\r\n        const { response } = error;\r\n        return this.handleError(response);\r\n      }\r\n    );\r\n\r\n    this.instance = http;\r\n    return http;\r\n  }\r\n\r\n  request<T = any, R = AxiosResponse<T>>(config: AxiosRequestConfig): Promise<R> {\r\n    return this.http.request(config);\r\n  }\r\n\r\n  get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\r\n    return this.http.get<T, R>(url, config);\r\n  }\r\n\r\n  post<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.http.post<T, R>(url, data, config);\r\n  }\r\n\r\n  put<T = any, R = AxiosResponse<T>>(\r\n    url: string,\r\n    data?: T,\r\n    config?: AxiosRequestConfig\r\n  ): Promise<R> {\r\n    return this.http.put<T, R>(url, data, config);\r\n  }\r\n\r\n  delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\r\n    return this.http.delete<T, R>(url, config);\r\n  }\r\n\r\n  // Handle global app errors\r\n  // We can handle generic app errors depending on the status code\r\n  private handleError(error: any) {\r\n    const { status } = error;\r\n\r\n    switch (status) {\r\n      case StatusCode.InternalServerError: {\r\n        // Handle InternalServerError\r\n        break;\r\n      }\r\n      case StatusCode.Forbidden: {\r\n        // Handle Forbidden\r\n        break;\r\n      }\r\n      case StatusCode.Unauthorized: {\r\n        // Handle Unauthorized\r\n        break;\r\n      }\r\n      case StatusCode.TooManyRequests: {\r\n        // Handle TooManyRequests\r\n        break;\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n}\r\n\r\nexport const http = new Http();\r\n","/*eslint node/no-restricted-import: [\"error\", [\"react-native-aws3-upload\"]]*/\r\nimport { QueryParams } from 'expo-linking';\r\nimport {\r\n  AcceptedDiscussionResponse,\r\n  Discussion,\r\n  DiscussionRequest,\r\n  PendingDiscussionResponse,\r\n  Question,\r\n  User,\r\n  Answer,\r\n} from './contracts';\r\nimport { http } from './http';\r\nimport { RNS3, File, Options } from 'react-native-aws3';\r\nimport 'react-native-get-random-values';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst baseURL = 'https://74pataqajg.execute-api.us-east-1.amazonaws.com/test';\r\n\r\nexport const fetchUsers = async (): Promise<User[]> => {\r\n  const { data } = await http.get<User[]>('/users');\r\n  return data;\r\n};\r\n\r\nexport const login = async (email, password) => {\r\n  const queryUrl = '/login?email=' + email + '&' + 'password=' + password;\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const signup = async (\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  age,\r\n  gender,\r\n  ethnicity,\r\n  intro,\r\n  phoneNumber\r\n) => {\r\n  const queryUrl = '/signup';\r\n  const response = await fetch(baseURL + queryUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      age: age,\r\n      sex: gender,\r\n      ethnicity: ethnicity,\r\n      intro: intro,\r\n      phoneNumber: phoneNumber,\r\n    }),\r\n  });\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const fetchQuestions = async () => {\r\n  const queryUrl = '/dashboard/relevantquestionsforhomepage';\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  //console.log(queryUrl);\r\n  return json;\r\n};\r\n\r\nexport const fetchQuestionsForYou = async (loggedIn) => {\r\n  //const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const queryUrl = '/dashboard/relevantquestionsforuser?email=' + loggedIn;\r\n  console.log(queryUrl);\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const getQuestion = async (questionId) => {\r\n  const queryUrl = '/question?questionId=' + questionId;\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const getAnswer = async (questionId) => {\r\n  const queryUrl = '/answer?questionId=' + questionId;\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const getQuestionsForSearchQueryApi = async (query) => {\r\n  // change this\r\n  const queryUrl = '/searchquery?query=' + query;\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport const saveQuestionApi = async (question: Question) => {\r\n  if (question.Thumbnail && question.Thumbnail != '')\r\n    question.Thumbnail = await uploadFileToS3(question.Thumbnail, typeOfFile.Image);\r\n  if (question.audio && question.audio != '')\r\n    question.audio = await uploadFileToS3(question.audio, typeOfFile.Audio);\r\n\r\n  const queryUrl = '/question';\r\n  try {\r\n    const response = await fetch(baseURL + queryUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(question),\r\n    });\r\n    const json = await response.json();\r\n    return json.success == true;\r\n  } catch (ex) {\r\n    alert(ex);\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getPendingDiscussions = async (\r\n  loggedInUser: string\r\n): Promise<PendingDiscussionResponse[]> => {\r\n  const parameters: DiscussionRequest = {\r\n    user_id: loggedInUser,\r\n    question_id: '',\r\n  };\r\n  const queryUrl = '/discussion/pending';\r\n\r\n  try {\r\n    const response = await fetch(baseURL + queryUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(parameters),\r\n    });\r\n    const json = await response.json();\r\n    return json?.data;\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const getAcceptedDiscussions = async (\r\n  loggedInUser: string\r\n): Promise<AcceptedDiscussionResponse[]> => {\r\n  const parameters: DiscussionRequest = {\r\n    user_id: loggedInUser,\r\n    question_id: '',\r\n  };\r\n  const queryUrl = '/discussion/accepted';\r\n  try {\r\n    const response = await fetch(baseURL + queryUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(parameters),\r\n    });\r\n    const json = await response.json();\r\n    return json?.data;\r\n  } catch (ex) {\r\n    console.log(ex);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const discussionAccepted = async (questionId: string, loggedInUser: string) => {\r\n  const parameters: DiscussionRequest = {\r\n    user_id: loggedInUser,\r\n    question_id: questionId,\r\n  };\r\n  const queryUrl = '/discussion/acceptRequest';\r\n  const response = await fetch(baseURL + queryUrl, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(parameters),\r\n  });\r\n\r\n  const json = await response.json();\r\n  return json?.success === true;\r\n};\r\n\r\nexport const saveAnswerApi = async (answer: Answer) => {\r\n  if (answer.audio && answer.audio != '')\r\n    answer.audio = await uploadFileToS3(answer.audio, typeOfFile.Audio);\r\n  const queryUrl = '/answer';\r\n  try {\r\n    const response = await fetch(baseURL + queryUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(answer),\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n  } catch (e) {\r\n    console.log('error at answer api', e);\r\n  }\r\n};\r\n\r\nexport const requestChat = async (answerId) => {\r\n  const queryUrl = '/discussion/requestchat';\r\n  try {\r\n    return fetch(baseURL + queryUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ answerId: answerId }),\r\n    });\r\n  } catch (e) {\r\n    console.log('error at requestChat api', e);\r\n  }\r\n};\r\n\r\nexport const getMyQuestions = async (email, status) => {\r\n  const queryUrl = '/question?email=' + email + '&status=' + status;\r\n  const response = await fetch(baseURL + queryUrl);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nexport enum typeOfFile {\r\n  Audio,\r\n  Image,\r\n}\r\n\r\nconst getPrefix = (objectType: typeOfFile) => {\r\n  if (objectType == typeOfFile.Audio) return 'audio/';\r\n  else if (objectType == typeOfFile.Image) return 'images/';\r\n  else {\r\n    console.log('error', objectType);\r\n  }\r\n};\r\n\r\nconst getFileType = (objectType: typeOfFile) => {\r\n  if (objectType == typeOfFile.Audio) return 'audio/mp4';\r\n  else if (objectType == typeOfFile.Image) return 'image/jpeg';\r\n  else {\r\n    console.log('error', objectType);\r\n  }\r\n};\r\n// Upload to S3\r\nconst uploadFileToS3 = async (fileUri: string, objectType: typeOfFile): Promise<string> => {\r\n  let fileType = fileUri.substring(fileUri.lastIndexOf('.') + 1);\r\n\r\n  const file: File = {\r\n    uri: fileUri,\r\n    name: uuidv4() + '.' + fileType,\r\n    type: getFileType(objectType) ?? '',\r\n  };\r\n\r\n  const options: Options = {\r\n    keyPrefix: getPrefix(objectType),\r\n    bucket: 'ccbd-social-audioapp',\r\n    region: 'us-east-1',\r\n    accessKey: 'AKIASA7M4MP6CINAQDGA',\r\n    secretKey: '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',\r\n    successActionStatus: 201,\r\n  };\r\n  try {\r\n    const response = await RNS3.put(file, options);\r\n    return response?.body?.postResponse?.location ?? '';\r\n  } catch (rejectedValue) {\r\n    alert('Unable to upload files.');\r\n    console.log(rejectedValue);\r\n  }\r\n  return '';\r\n};\r\n","import * as React from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  Searchbar,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\nimport { Text, View } from '../components/Themed';\r\nimport { ScrollView, StyleSheet } from 'react-native';\r\nimport { fetchQuestions, fetchQuestionsForYou } from '../http/api';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../constants/Colors';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { Item } from 'react-native-paper/lib/typescript/components/List/List';\r\nimport { white } from 'react-native-paper/lib/typescript/styles/colors';\r\nimport { HomePageCategoryQuestions, Question } from '../http/contracts';\r\nimport { useSelector } from 'react-redux';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n// import { Searchbar } from 'react-native-paper';\r\n// const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\nconst cardStyles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    height: 100,\r\n    width: 20,\r\n    alignItems: 'flex-start',\r\n    padding: 30,\r\n    borderRadius: 20,\r\n  },\r\n  card: {\r\n    width: 200,\r\n    height: 225,\r\n    margin: 10,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n    borderWidth: 2,\r\n    borderRadius: 15,\r\n    backgroundColor: '#333333',\r\n    alignSelf: 'center',\r\n  },\r\n  cardCover: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: 200,\r\n    height: 150,\r\n    borderWidth: 1,\r\n    alignSelf: 'center',\r\n  },\r\n  cardContent: {\r\n    height: 50,\r\n  },\r\n  cardCaption: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n  cardPosted: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n});\r\n\r\nconst MyComponent = ({ navigation }) => {\r\n  const isFocused = useIsFocused();\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [currentScreen, setCurrentScreen] = React.useState<string>('Home');\r\n  const [response, setResponse] = React.useState<HomePageCategoryQuestions[]>([]);\r\n  const [items_category, setItems] = React.useState([]);\r\n  const [trending, setTrending] = React.useState<Question[]>([]);\r\n  const [latest, setLatest] = React.useState<Question[]>([]);\r\n  const [location, setLocation] = React.useState<Question[]>([]);\r\n  const [foryou, setforyou] = React.useState<Question[]>([]);\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n\r\n  React.useEffect(() => {\r\n    async function apitesting() {\r\n      setIsLoading(true);\r\n      fetchQuestions().then((response: HomePageCategoryQuestions[]) => {\r\n        setIsLoading(false);\r\n        setResponse(response);\r\n\r\n        response.forEach((category) => {\r\n          if (category.homePageCategory == 'Trending') {\r\n            setTrending(category.questions);\r\n          } else if (category.homePageCategory == 'Latest') {\r\n            setLatest(category.questions);\r\n          } else if (category.homePageCategory == 'Location') {\r\n            setLocation(category.questions);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (isFocused) {\r\n      apitesting();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  if (loggedInUser) {\r\n    //console.log('hello');\r\n    React.useEffect(() => {\r\n      async function apitesting1() {\r\n        setIsLoading(true);\r\n        //console.log('intest');\r\n        fetchQuestionsForYou(loggedInUser).then((response: HomePageCategoryQuestions[]) => {\r\n          setIsLoading(false);\r\n          setResponse(response);\r\n          //console.log('hello');\r\n          console.log(response);\r\n          response.forEach((category) => {\r\n            if (category.homePageCategory == 'ForYou') {\r\n              setforyou(category.questions);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      if (isFocused) {\r\n        apitesting1();\r\n      }\r\n    }, [isFocused]);\r\n  }\r\n\r\n  const HomeScreen = 'Home',\r\n    ForYouScreenn = 'ForYou';\r\n  const switchScreens = () => {\r\n    if (currentScreen == HomeScreen) {\r\n      setCurrentScreen(ForYouScreenn);\r\n    } else {\r\n      setCurrentScreen(HomeScreen);\r\n    }\r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    loaderContainer: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      backgroundColor: spotifyDark,\r\n    },\r\n    textHeading: {\r\n      marginTop: 10,\r\n      marginLeft: 15,\r\n      fontWeight: 'bold',\r\n      color: textColor,\r\n      textAlign: 'left',\r\n      fontSize: 20,\r\n    },\r\n    buttonsContainer: {\r\n      flexDirection: 'row',\r\n      borderRadius: 20,\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n      height: 40,\r\n      alignSelf: 'center',\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n      <View style={{ height: '100%' }} lightColor={spotifyDark}>\r\n        {isLoading ? (\r\n          <View style={[styles.loaderContainer]}>\r\n            <ActivityIndicator animating={true} color={spotifyGreen} />\r\n          </View>\r\n        ) : (\r\n          <>\r\n            {loggedInUser ? (\r\n              <View style={styles.buttonsContainer}>\r\n                <Button disabled={currentScreen == HomeScreen} onPress={switchScreens}>\r\n                  Home\r\n                </Button>\r\n                <Button disabled={currentScreen === ForYouScreenn} onPress={switchScreens}>\r\n                  For You\r\n                </Button>\r\n              </View>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {currentScreen == 'Home' ? (\r\n              <>\r\n                <Text style={styles.textHeading}>Trending</Text>\r\n                <ScrollView horizontal={true}>\r\n                  {trending.map((item) => (\r\n                    <Card\r\n                      key={item.questionId}\r\n                      style={cardStyles.card}\r\n                      onPress={() =>\r\n                        navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                      }\r\n                    >\r\n                      <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                      <Card.Content style={cardStyles.cardContent}>\r\n                        <Title\r\n                          style={cardStyles.cardCaption}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.caption}\r\n                        </Title>\r\n                        <Paragraph\r\n                          style={cardStyles.cardPosted}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.postedBy}\r\n                        </Paragraph>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  ))}\r\n                </ScrollView>\r\n\r\n                <Text style={styles.textHeading}>Latest</Text>\r\n                <ScrollView horizontal={true}>\r\n                  {latest.map((item) => (\r\n                    <Card\r\n                      key={item.questionId}\r\n                      style={cardStyles.card}\r\n                      onPress={() =>\r\n                        navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                      }\r\n                    >\r\n                      <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                      <Card.Content style={cardStyles.cardContent}>\r\n                        <Title\r\n                          style={cardStyles.cardCaption}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.caption}\r\n                        </Title>\r\n                        <Paragraph\r\n                          style={cardStyles.cardPosted}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.postedBy}\r\n                        </Paragraph>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  ))}\r\n                </ScrollView>\r\n\r\n                <Text style={styles.textHeading}>Location</Text>\r\n                <ScrollView horizontal={true}>\r\n                  {location.map((item) => (\r\n                    <Card\r\n                      key={item.questionId}\r\n                      style={cardStyles.card}\r\n                      onPress={() =>\r\n                        navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                      }\r\n                    >\r\n                      <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                      <Card.Content style={cardStyles.cardContent}>\r\n                        <Title\r\n                          style={cardStyles.cardCaption}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.caption}\r\n                        </Title>\r\n                        <Paragraph\r\n                          style={cardStyles.cardPosted}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.postedBy}\r\n                        </Paragraph>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  ))}\r\n                </ScrollView>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {foryou &&\r\n                  foryou.map((item) => (\r\n                    <Card\r\n                      key={item.questionId}\r\n                      style={cardStyles.card}\r\n                      onPress={() =>\r\n                        navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                      }\r\n                    >\r\n                      <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                      <Card.Content style={cardStyles.cardContent}>\r\n                        <Title\r\n                          style={cardStyles.cardCaption}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.caption}\r\n                        </Title>\r\n                        <Paragraph\r\n                          style={cardStyles.cardPosted}\r\n                          numberOfLines={1}\r\n                          ellipsizeMode=\"tail\"\r\n                        >\r\n                          {item.postedBy}\r\n                        </Paragraph>\r\n                      </Card.Content>\r\n                    </Card>\r\n                  ))}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport * as React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Pressable,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\nimport { login, signup } from '../http/api';\r\nimport { http } from '../http/http';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Signup from './Signup';\r\nimport { ApiResponse } from '../http/contracts';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateIsUserLoggedIn, updateState } from '../redux/actions';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../constants/Colors';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction Login({ navigation }) {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [response, setResponse] = useState([]);\r\n  const [success, setSucess] = useState<boolean>(true);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const CallLogin = async () => {\r\n    setIsLoading(true);\r\n    login(email, password).then((response) => {\r\n      setIsLoading(false);\r\n      setResponse(response);\r\n      setSucess(response.success);\r\n      if (response.success) {\r\n        dispatch(updateState(updateIsUserLoggedIn, email));\r\n        navigation.navigate('Home');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Email\"\r\n          onChangeText={(email) => setEmail(email)}\r\n        />\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Password\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n        />\r\n      </View>\r\n      <View>\r\n        {success ? <Text></Text> : <Text style={styles.textColor}>Invalid Email/Password</Text>}\r\n      </View>\r\n      {isLoading ? (\r\n        <ActivityIndicator animating={true} color={spotifyGreen} />\r\n      ) : (\r\n        <TouchableOpacity style={styles.loginBtn}>\r\n          <Pressable\r\n            onPress={(response) => CallLogin()}\r\n            style={({ pressed }) => ({\r\n              opacity: pressed ? 0.5 : 1,\r\n            })}\r\n          >\r\n            <Text style={styles.loginTextInput}>Login</Text>\r\n          </Pressable>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      <View style={styles.signup}>\r\n        <Text>\r\n          <Text style={styles.textColor}>Don't have an account? </Text>\r\n          <Pressable\r\n            onPress={() => navigation.navigate('Signup')}\r\n            style={({ pressed }) => ({\r\n              opacity: pressed ? 0.5 : 1,\r\n            })}\r\n          >\r\n            <Text style={{ color: spotifyGreen }}>Sign Up</Text>\r\n          </Pressable>\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n  inputView: {\r\n    borderColor: '#AEACAB',\r\n    borderWidth: 1,\r\n    width: '70%',\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 5,\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    color: spotifyDark,\r\n  },\r\n  loginBtn: {\r\n    width: '70%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 40,\r\n    backgroundColor: spotifyGreen,\r\n    borderRadius: 10,\r\n  },\r\n  signup: {\r\n    marginTop: 50,\r\n    backgroundColor: spotifyDark,\r\n    color: textColor,\r\n  },\r\n  textColor: {\r\n    color: textColor,\r\n    backgroundColor: spotifyDark,\r\n  },\r\n  loginTextInput: {\r\n    color: textColor,\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default Login;\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport * as React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Pressable,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\nimport { login, signup } from '../http/api';\r\nimport { http } from '../http/http';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { spotifyDark, spotifyGreen } from '../constants/Colors';\r\n\r\nexport default function Signup({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [ethnicity, setEthnicity] = useState('');\r\n  const [intro, setIntro] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [response, setResponse] = useState([]);\r\n  const CallSignUp = async () => {\r\n    signup(email, password, firstName, lastName, age, gender, ethnicity, intro, phoneNumber).then(\r\n      (response) => {\r\n        setResponse(response);\r\n        if (response.success) {\r\n          navigation.navigate('Login');\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView style={styles.scrollView}>\r\n        <View style={styles.fieldContainer}>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Email\"\r\n              onChangeText={(email) => setEmail(email)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Password\"\r\n              secureTextEntry={true}\r\n              onChangeText={(password) => setPassword(password)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"First Name\"\r\n              onChangeText={(firstName) => setFirstName(firstName)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Last Name\"\r\n              onChangeText={(lastName) => setLastName(lastName)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Age\"\r\n              onChangeText={(age) => setAge(age)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Gender\"\r\n              onChangeText={(gender) => setGender(gender)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Ethnicity\"\r\n              onChangeText={(ethnicity) => setEthnicity(ethnicity)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Intro\"\r\n              onChangeText={(intro) => setIntro(intro)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.TextInput}\r\n              placeholder=\"Phone Number\"\r\n              onChangeText={(phoneNumber) => setPhoneNumber(phoneNumber)}\r\n            />\r\n          </View>\r\n          <TouchableOpacity style={styles.loginBtn}>\r\n            <Pressable\r\n              onPress={() => CallSignUp()}\r\n              style={({ pressed }) => ({\r\n                opacity: pressed ? 0.5 : 1,\r\n              })}\r\n            >\r\n              <Text style={{ color: 'white' }}>Sign Up</Text>\r\n            </Pressable>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n  fieldContainer: {\r\n    paddingTop: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n  },\r\n  inputView: {\r\n    borderColor: '#AEACAB',\r\n    borderWidth: 1,\r\n    width: '70%',\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    color: spotifyDark,\r\n  },\r\n  loginBtn: {\r\n    width: '70%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 40,\r\n    backgroundColor: spotifyGreen,\r\n    borderRadius: 10,\r\n  },\r\n  signup: {\r\n    marginTop: 50,\r\n  },\r\n});\r\n","import React, { MutableRefObject, useEffect, useState } from 'react';\r\nimport { Dimensions, Image, StyleSheet, Text, TouchableHighlight, View } from 'react-native';\r\nimport Slider from '@react-native-community/slider';\r\nimport { Audio, AVPlaybackStatus } from 'expo-av';\r\nimport * as Icons from '../Icons/Icons';\r\nimport { useRef } from 'react';\r\nimport { AntDesign, Feather } from '@expo/vector-icons';\r\n\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#EEEEEE';\r\nconst greyColor = '#000000';\r\nconst LIVE_COLOR = '#FF0000';\r\nconst DISABLED_OPACITY = 0.5;\r\nconst RATE_SCALE = 3.0;\r\n\r\ninterface AudioPlayerProps {\r\n  recordedUri: string;\r\n  isSliderEnabled: boolean;\r\n  isTimerEnabled: boolean;\r\n}\r\n\r\nexport default function AudioPlayer(props: AudioPlayerProps) {\r\n  const sound: MutableRefObject<Audio.Sound> = useRef(new Audio.Sound());\r\n  let isSeeking: MutableRefObject<boolean> = useRef(false);\r\n  let shouldPlayAtEndOfSeek: MutableRefObject<boolean> = useRef(false);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [soundPosition, setSoundPosition] = useState<number | null>(null);\r\n  const [soundDuration, setSoundDuration] = useState<number | null>(null);\r\n  const [shouldPlay, setShouldPlay] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const [isPlaybackAllowed, setIsPlaybackAllowed] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const getAudio = async () => {\r\n      if (props.recordedUri && props.recordedUri != '') {\r\n        const loadedAudio: AVPlaybackStatus = await sound.current.loadAsync(\r\n          { uri: props.recordedUri },\r\n          {},\r\n          true\r\n        );\r\n        sound.current.setOnPlaybackStatusUpdate((info) => _updateScreenForSoundStatus(info));\r\n        _updateScreenForSoundStatus(loadedAudio);\r\n        return () => {\r\n          UnloadAudio();\r\n        };\r\n      }\r\n    };\r\n\r\n    getAudio();\r\n  }, [props.recordedUri]);\r\n\r\n  const _setStateFromAVIsLoaded = (json: any) => {\r\n    setSoundDuration(json.soundDuration);\r\n    setSoundPosition(json.soundPosition);\r\n    setShouldPlay(json.shouldPlay);\r\n    setIsPlaying(json.isPlaying);\r\n    setIsPlaybackAllowed(json.isPlaybackAllowed);\r\n  };\r\n\r\n  const _setStateFromAVIsNotLoaded = (json: any) => {\r\n    setSoundDuration(json.soundDuration);\r\n    setSoundPosition(json.soundPosition);\r\n    setIsPlaybackAllowed(json.isPlaybackAllowed);\r\n  };\r\n\r\n  const _updateScreenForSoundStatus = (status: AVPlaybackStatus) => {\r\n    if (status.isLoaded) {\r\n      _setStateFromAVIsLoaded({\r\n        soundDuration: status.durationMillis ?? null,\r\n        soundPosition: status.positionMillis,\r\n        shouldPlay: status.shouldPlay,\r\n        isPlaying: status.isPlaying,\r\n        isPlaybackAllowed: true,\r\n      });\r\n    } else {\r\n      _setStateFromAVIsNotLoaded({\r\n        soundDuration: null,\r\n        soundPosition: null,\r\n        isPlaybackAllowed: false,\r\n      });\r\n      if (status.error) {\r\n        console.log(`FATAL PLAYER ERROR: ${status.error}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const PlayRecordedAudio = async () => {\r\n    try {\r\n      // Get Player Status\r\n      const playerStatus = await sound.current.getStatusAsync();\r\n\r\n      // Play if song is loaded successfully\r\n      if (playerStatus.isLoaded) {\r\n        if (playerStatus.isPlaying === false) {\r\n          sound.current.playAsync();\r\n          setIsPlaying(true);\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  const StopPlaying = async () => {\r\n    try {\r\n      sound.current.stopAsync();\r\n      setIsPlaying(false);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const UnloadAudio = async () => {\r\n    const playerStatus = await sound.current.getStatusAsync();\r\n    if (playerStatus.isLoaded === true) await sound.current.unloadAsync();\r\n  };\r\n\r\n  // DOM Interactions\r\n\r\n  const _onPlayPausePressed = () => {\r\n    if (sound.current != null) {\r\n      if (isPlaying) {\r\n        StopPlaying();\r\n      } else {\r\n        PlayRecordedAudio();\r\n      }\r\n    }\r\n  };\r\n\r\n  const _onSeekSliderValueChange = (value: number) => {\r\n    if (sound.current != null && !isSeeking.current) {\r\n      isSeeking.current = true;\r\n      shouldPlayAtEndOfSeek.current = shouldPlay;\r\n      sound.current.pauseAsync();\r\n    }\r\n  };\r\n\r\n  const _onSeekSliderSlidingComplete = async (value: number) => {\r\n    if (sound.current != null) {\r\n      isSeeking.current = false;\r\n      const seekPosition = value * (soundDuration || 0);\r\n      if (shouldPlayAtEndOfSeek.current) {\r\n        sound.current.playFromPositionAsync(seekPosition);\r\n      } else {\r\n        sound.current.setPositionAsync(seekPosition);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _getSeekSliderPosition = () => {\r\n    if (sound.current != null && soundPosition != null && soundDuration != null) {\r\n      return soundPosition / soundDuration;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const _getMMSSFromMillis = (millis: number) => {\r\n    const totalSeconds = millis / 1000;\r\n    const seconds = Math.floor(totalSeconds % 60);\r\n    const minutes = Math.floor(totalSeconds / 60);\r\n\r\n    const padWithZero = (number: number) => {\r\n      const string = number.toString();\r\n      if (number < 10) {\r\n        return '0' + string;\r\n      }\r\n      return string;\r\n    };\r\n    return padWithZero(minutes) + ':' + padWithZero(seconds);\r\n  };\r\n\r\n  const _getPlaybackTimestamp = () => {\r\n    if (sound.current != null && soundPosition != null && soundDuration != null) {\r\n      return `${_getMMSSFromMillis(soundPosition)} / ${_getMMSSFromMillis(soundDuration)}`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <>\r\n          <View\r\n            style={[\r\n              styles.mainContainer,\r\n              {\r\n                opacity: !isPlaybackAllowed || isLoading ? DISABLED_OPACITY : 1.0,\r\n              },\r\n            ]}\r\n          >\r\n            <TouchableHighlight\r\n              underlayColor={BACKGROUND_COLOR}\r\n              onPress={_onPlayPausePressed}\r\n              disabled={!isPlaybackAllowed || isLoading}\r\n            >\r\n              {!isPlaying ? (\r\n                <Feather name=\"play\" size={24} color={greyColor} />\r\n              ) : (\r\n                <AntDesign name=\"pause\" size={24} color={greyColor} />\r\n              )}\r\n            </TouchableHighlight>\r\n            <View>\r\n              {props.isSliderEnabled ? (\r\n                <Slider\r\n                  style={styles.playbackSlider}\r\n                  trackImage={Icons.TRACK_1.module}\r\n                  thumbImage={Icons.THUMB_1.module}\r\n                  value={_getSeekSliderPosition()}\r\n                  onValueChange={_onSeekSliderValueChange}\r\n                  onSlidingComplete={_onSeekSliderSlidingComplete}\r\n                  disabled={!isPlaybackAllowed || isLoading}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {props.isTimerEnabled ? (\r\n                <Text style={[styles.playbackTimestamp]}>{_getPlaybackTimestamp()}</Text>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <View />\r\n            </View>\r\n          </View>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  emptyContainer: {\r\n    alignSelf: 'stretch',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  mainContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    alignSelf: 'stretch',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    maxWidth: DEVICE_WIDTH - 20,\r\n    maxHeight: 100,\r\n  },\r\n  playbackSlider: {\r\n    alignSelf: 'stretch',\r\n    width: DEVICE_WIDTH / 1.3,\r\n  },\r\n  playbackTimestamp: {\r\n    textAlign: 'right',\r\n    alignSelf: 'stretch',\r\n    paddingRight: 20,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {\r\n  Button,\r\n  Platform,\r\n  Image,\r\n  StyleSheet,\r\n  TextInput,\r\n  Dimensions,\r\n  ScrollView,\r\n  Pressable,\r\n  TouchableOpacity,\r\n  TouchableHighlight,\r\n} from 'react-native';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AudioPlayer from '../components/audioPlayer/audioPlayer';\r\nimport 'react-native-get-random-values';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { View, Text } from '../components/Themed';\r\nimport { getAnswer, getQuestion, requestChat, saveAnswerApi } from '../http/api';\r\nimport { AntDesign, FontAwesome } from '@expo/vector-icons';\r\nimport { audioUpdateRecordingURI, updateState } from '../redux/actions';\r\nimport { Answer } from '../http/contracts';\r\nimport { useIsFocused } from '@react-navigation/native';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../constants/Colors';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#EEEEEE';\r\n\r\nexport default function QuestionAnswer(props) {\r\n  const isFocused = useIsFocused();\r\n\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [caption, setCaption] = useState<string>('');\r\n  const [hashtags, setHashtags] = useState<string>('');\r\n  const [postedBy, setPostedBy] = useState<string>('');\r\n  const [location, setLocation] = useState<string>('');\r\n  const [audio, setAudio] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [answers, setAnswers] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestion = async () => {\r\n      setIsLoading(true);\r\n      getQuestion(props.route.params.questionId).then((response) => {\r\n        setIsLoading(false);\r\n        setImage(response.Thumbnail);\r\n        setCaption(response.caption);\r\n        setHashtags(response.hashtags);\r\n        setPostedBy(response.postedBy);\r\n        setAudio(response.audio);\r\n      });\r\n      getAnswer(props.route.params.questionId).then((response) => {\r\n        setIsLoading(false);\r\n        setAnswers(response);\r\n      });\r\n    };\r\n    if (isFocused) fetchQuestion();\r\n  }, [isFocused]);\r\n\r\n  const generateAnswer = (): Answer => {\r\n    return {\r\n      answerId: uuidv4(),\r\n      question: props.route.params.questionId,\r\n      audio: '',\r\n      answeredBy: loggedInUser,\r\n    };\r\n  };\r\n\r\n  const RequestChat = async (answerId) => {\r\n    requestChat(answerId).then((response) => {});\r\n  };\r\n\r\n  function record() {\r\n    dispatch(updateState(audioUpdateRecordingURI, ''));\r\n    props.navigation.navigate('Record', {\r\n      postSaveRedirection: 'QuestionAnswer',\r\n      postSaveRedirectionParams: { questionId: props.route.params.questionId },\r\n      postSaveExecutor: saveAnswerApi,\r\n      postSaveExecutorParams: generateAnswer(),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      {isLoading && isFocused ? (\r\n        <View style={styles.mainContainerWrapper} lightColor={spotifyDark}>\r\n          <View style={[styles.loaderContainer]}>\r\n            <ActivityIndicator animating={true} color={spotifyGreen} />\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.mainContainerWrapper} lightColor={spotifyDark}>\r\n          <View style={styles.questionContainer}>\r\n            <View style={styles.questionImageContainer}>\r\n              {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n            </View>\r\n            {audio && (\r\n              <View style={styles.questionAudioContainer}>\r\n                <AudioPlayer\r\n                  recordedUri={audio ?? ''}\r\n                  isSliderEnabled={true}\r\n                  isTimerEnabled={true}\r\n                />\r\n              </View>\r\n            )}\r\n            <View style={styles.captionContainer}>\r\n              <Text style={styles.textHeading}>{caption}</Text>\r\n              <Text style={styles.textSubHeading}>{hashtags}</Text>\r\n              <Text style={styles.textSubHeading}>{postedBy}</Text>\r\n            </View>\r\n          </View>\r\n          {loggedInUser ? (\r\n            <View style={styles.answerThisQuestionContainer}>\r\n              <Text style={styles.textHeading}>Answer this question: </Text>\r\n              <Pressable\r\n                onPress={() => record()}\r\n                style={({ pressed }) => ({\r\n                  opacity: pressed ? 0.5 : 1,\r\n                })}\r\n              >\r\n                <FontAwesome name=\"microphone\" size={24} color=\"#5D3EA8\" />\r\n              </Pressable>\r\n            </View>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <View style={styles.answersContainer}>\r\n            <Text style={styles.textHeading}>Answers:</Text>\r\n            {answers &&\r\n              answers.map((item) => (\r\n                <View style={styles.answerContainer}>\r\n                  <AudioPlayer\r\n                    recordedUri={item.audio ?? ''}\r\n                    isSliderEnabled={true}\r\n                    isTimerEnabled={true}\r\n                  />\r\n                  <View style={styles.answerBottomContainer}>\r\n                    <Text>Answered By: {item.answeredBy ? item.answeredBy : 'Error'}</Text>\r\n                    {loggedInUser ? (\r\n                      <TouchableHighlight\r\n                        underlayColor={BACKGROUND_COLOR}\r\n                        onPress={(response) => RequestChat(item.answerId)}\r\n                        disabled={isLoading}\r\n                      >\r\n                        <View style={styles.circularIcon}>\r\n                          <AntDesign name=\"message1\" size={24} color=\"black\" />\r\n                        </View>\r\n                      </TouchableHighlight>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </View>\r\n                </View>\r\n              ))}\r\n          </View>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainerWrapper: {\r\n    backgroundColor: spotifyDark,\r\n    flex: 1,\r\n  },\r\n  answerThisQuestionContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    alignSelf: 'center',\r\n    borderRadius: 5,\r\n    height: 10,\r\n    maxHeight: 100,\r\n    minHeight: 100,\r\n    marginBottom: 10,\r\n  },\r\n  answersContainer: {\r\n    flex: 1,\r\n    width: '90%',\r\n    alignSelf: 'center',\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  answerContainer: {\r\n    minHeight: 120,\r\n    marginBottom: 10,\r\n  },\r\n  questionContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '90%',\r\n    minHeight: 450,\r\n    maxHeight: 450,\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    alignSelf: 'center',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  questionImageContainer: {\r\n    marginBottom: 10,\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  questionAudioContainer: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n  },\r\n  captionContainer: {\r\n    height: 30,\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    width: DEVICE_WIDTH - 30,\r\n  },\r\n  answerBottomContainer: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n  },\r\n  loginBtn: {\r\n    width: '70%',\r\n    height: 50,\r\n  },\r\n  loaderContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n  textHeading: {\r\n    fontWeight: 'bold',\r\n    color: spotifyDark,\r\n    fontSize: 20,\r\n    marginBottom: 5,\r\n  },\r\n  textSubHeading: {\r\n    fontWeight: 'bold',\r\n    color: spotifyDark,\r\n    fontSize: 12,\r\n  },\r\n  circularIcon: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 40,\r\n    backgroundColor: spotifyGreen,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Button, Platform, Image, StyleSheet, TextInput, Dimensions } from 'react-native';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { useSelector } from 'react-redux';\r\nimport AudioPlayer from '../components/audioPlayer/audioPlayer';\r\nimport { Question } from '../http/contracts';\r\nimport 'react-native-get-random-values';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { View } from '../components/Themed';\r\nimport { saveQuestionApi } from '../http/api';\r\nimport Navigation from '../navigation';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\nimport { spotifyGreen } from '../constants/Colors';\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#EEEEEE';\r\n\r\nexport default function QuestionScreen() {\r\n  const navigation = useNavigation();\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [caption, onCaptionChange] = useState<string>('');\r\n  const [hashtags, onHashtagsChange] = useState<string>('');\r\n  const [users, onUsersChange] = useState<string>('');\r\n  const [location, onLocationChange] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  const recordingUri = useSelector((state: any) => state.audio.recordingUri);\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n    }\r\n  };\r\n\r\n  const _setDisabledForSave = () => {\r\n    return caption == '' || recordingUri == '' ? true : false;\r\n  };\r\n\r\n  const generateJSON = (): Question => {\r\n    const gen: Question = {\r\n      questionId: uuidv4(),\r\n      caption: caption,\r\n      hashtags: hashtags,\r\n      taggedUsers: users,\r\n      location: location,\r\n      Thumbnail: image ?? '',\r\n      audio: recordingUri,\r\n      postedBy: loggedInUser != '' ? loggedInUser : 'test@columbia.edu',\r\n      categories: '',\r\n      isPublished: true,\r\n      questionStatus: 'unanswered',\r\n    };\r\n    return gen;\r\n  };\r\n\r\n  const saveQuestionAsDraft = (): void => {\r\n    const question = generateJSON();\r\n    question.isPublished = false;\r\n    setIsLoading(true);\r\n    saveQuestionApi(question).then((response) => {\r\n      setIsLoading(false);\r\n      navigation.navigate('Home');\r\n    });\r\n  };\r\n\r\n  const saveQuestion = (): void => {\r\n    const question = generateJSON();\r\n    saveQuestionApi(question).then((response) => {\r\n      setIsLoading(false);\r\n      navigation.navigate('Home');\r\n    });\r\n  };\r\n  const saveQuestionAsAnonymous = (): void => {\r\n    const question = generateJSON();\r\n    question.postedBy = 'test@columbia.edu';\r\n    saveQuestionApi(question).then((response) => {\r\n      setIsLoading(false);\r\n      navigation.navigate('Home');\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          alert('Sorry, we need camera roll permissions to make this work!');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.mainContainer}>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n      {recordingUri && (\r\n        <AudioPlayer\r\n          recordedUri={recordingUri ?? ''}\r\n          isSliderEnabled={true}\r\n          isTimerEnabled={true}\r\n        />\r\n      )}\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(text: string) => {\r\n          onCaptionChange(text);\r\n        }}\r\n        value={caption}\r\n        placeholder=\"Caption\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(text: string) => {\r\n          onHashtagsChange(text);\r\n        }}\r\n        value={hashtags}\r\n        placeholder=\"Hashtags\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(text: string) => {\r\n          onUsersChange(text);\r\n        }}\r\n        value={users}\r\n        placeholder=\"Users\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={(text: string) => {\r\n          onLocationChange(text);\r\n        }}\r\n        value={location}\r\n        placeholder=\"Location\"\r\n      />\r\n      {isLoading ? (\r\n        <ActivityIndicator animating={true} color={spotifyGreen} />\r\n      ) : (\r\n        <View style={styles.saveandBackStyle}>\r\n          <View>\r\n            <reactNativePaper.Button mode=\"text\" onPress={() => saveQuestionAsDraft()}>\r\n              Save As Draft\r\n            </reactNativePaper.Button>\r\n          </View>\r\n          <View style={styles.publishStyles}>\r\n            <reactNativePaper.Button\r\n              disabled={_setDisabledForSave()}\r\n              mode=\"text\"\r\n              onPress={() => saveQuestion()}\r\n            >\r\n              Publish\r\n            </reactNativePaper.Button>\r\n            <reactNativePaper.Button\r\n              disabled={_setDisabledForSave()}\r\n              mode=\"text\"\r\n              onPress={() => saveQuestionAsAnonymous()}\r\n            >\r\n              Publish As Anonymous\r\n            </reactNativePaper.Button>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    minWidth: DEVICE_WIDTH,\r\n    minHeight: DEVICE_HEIGHT,\r\n    marginTop: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    width: DEVICE_WIDTH - 30,\r\n  },\r\n  saveandBackStyle: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    flexDirection: 'column',\r\n    minHeight: DEVICE_HEIGHT / 4.0,\r\n    minWidth: DEVICE_WIDTH / 4.0,\r\n  },\r\n  publishStyles: {\r\n    marginTop: 20,\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Dimensions, TouchableOpacity, ScrollView } from 'react-native';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { useSelector } from 'react-redux';\r\nimport { AcceptedDiscussionResponse, PendingDiscussionResponse } from '../http/contracts';\r\nimport 'react-native-get-random-values';\r\n\r\nimport { View } from '../components/Themed';\r\nimport {\r\n  discussionAccepted,\r\n  getAcceptedDiscussions,\r\n  getPendingDiscussions,\r\n  saveQuestionApi,\r\n} from '../http/api';\r\nimport { Card, Paragraph, Title } from 'react-native-paper';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { spotifyDark } from '../constants/Colors';\r\nimport { useIsFocused } from '@react-navigation/native';\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = spotifyDark;\r\n\r\nconst pendingScreen = 'pending',\r\n  acceptedScreen = 'accepted';\r\n\r\nexport default function DiscussionScreen() {\r\n  const isFocused = useIsFocused();\r\n  const [rerender, forcererender] = useState<number>(0);\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const [currentScreen, setCurrentScreen] = useState<string>('pending');\r\n  const [pendingItems, setPendingItems] = useState<PendingDiscussionResponse[]>([]);\r\n  const [acceptedItems, setAcceptedItems] = useState<AcceptedDiscussionResponse[]>([]);\r\n\r\n  console.log('items', pendingItems, acceptedItems);\r\n\r\n  useEffect(() => {\r\n    const apiCalls = async () => {\r\n      if (currentScreen == acceptedScreen) {\r\n        setPendingItems([]);\r\n        const discussions = await getAcceptedDiscussions(loggedInUser);\r\n        setAcceptedItems(discussions);\r\n      } else {\r\n        const discussions = await getPendingDiscussions(loggedInUser);\r\n        setPendingItems(discussions);\r\n        setAcceptedItems([]);\r\n      }\r\n    };\r\n\r\n    apiCalls();\r\n  }, [currentScreen, rerender, isFocused]);\r\n\r\n  const switchScreens = () => {\r\n    if (currentScreen == pendingScreen) {\r\n      setCurrentScreen(acceptedScreen);\r\n    } else {\r\n      setCurrentScreen(pendingScreen);\r\n    }\r\n  };\r\n\r\n  const onDiscussionAccepted = (questionId: string) => {\r\n    discussionAccepted(questionId, loggedInUser).then(() => {\r\n      forcererender(rerender + 1);\r\n    });\r\n  };\r\n\r\n  const onDiscussionRejected = () => {\r\n    alert('Not Implemented');\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.buttonsContainer}>\r\n        <reactNativePaper.Button disabled={currentScreen == pendingScreen} onPress={switchScreens}>\r\n          Pending\r\n        </reactNativePaper.Button>\r\n        <reactNativePaper.Button\r\n          disabled={currentScreen === acceptedScreen}\r\n          onPress={switchScreens}\r\n        >\r\n          Accepted\r\n        </reactNativePaper.Button>\r\n      </View>\r\n      <View style={styles.cardContainer}>\r\n        {currentScreen == 'pending'\r\n          ? pendingItems &&\r\n            pendingItems.map((item) => (\r\n              <View key={item.posted_by} style={styles.cardStyle}>\r\n                <View style={styles.cardLeft}>\r\n                  <Title style={styles.title}>{item.caption}</Title>\r\n                  <Paragraph style={styles.paragraph}>{item.posted_by}</Paragraph>\r\n                </View>\r\n                <View style={styles.cardRightButtons}>\r\n                  <TouchableOpacity\r\n                    onPress={() => onDiscussionAccepted(item.question_id)}\r\n                    style={styles.roundButtonLeft}\r\n                  >\r\n                    <FontAwesome name=\"check\" size={24} color=\"white\" />\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity\r\n                    onPress={() => onDiscussionRejected()}\r\n                    style={styles.roundButtonRight}\r\n                  >\r\n                    <FontAwesome name=\"times\" size={24} color=\"white\" />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            ))\r\n          : acceptedItems &&\r\n            acceptedItems.map((item) => (\r\n              <View key={item.posted_by} style={styles.cardStyle}>\r\n                <View style={styles.cardLeft}>\r\n                  <Title style={styles.title}>{item.caption}</Title>\r\n                  <Paragraph style={styles.paragraph}>{item.posted_by}</Paragraph>\r\n                </View>\r\n                <View style={styles.cardRight}>\r\n                  <Paragraph style={styles.paragraph}>{item.meeting_info}</Paragraph>\r\n                </View>\r\n              </View>\r\n            ))}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainContainer: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    minWidth: DEVICE_WIDTH,\r\n    minHeight: DEVICE_HEIGHT,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    borderRadius: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    height: 40,\r\n    alignSelf: 'center',\r\n  },\r\n  cardContainer: {\r\n    backgroundColor: BACKGROUND_COLOR,\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    minWidth: DEVICE_WIDTH,\r\n  },\r\n  cardStyle: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: DEVICE_WIDTH - 30,\r\n    height: 150,\r\n    marginBottom: 20,\r\n    borderRadius: 10,\r\n  },\r\n  cardLeft: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: DEVICE_WIDTH / 2.0 - 10,\r\n    height: 100,\r\n    marginRight: 10,\r\n  },\r\n  cardRight: {\r\n    flex: 1,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: DEVICE_WIDTH / 2.0 - 10,\r\n    height: 100,\r\n  },\r\n  cardRightButtons: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: DEVICE_WIDTH / 2.0 - 10,\r\n    height: 100,\r\n  },\r\n  title: {},\r\n  paragraph: {},\r\n  roundButtonLeft: {\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: '#4A7E12',\r\n    marginRight: 20,\r\n  },\r\n  roundButtonRight: {\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    backgroundColor: '#BC2706',\r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  Searchbar,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\nimport { Text, View } from '../components/Themed';\r\nimport { ScrollView, StyleSheet } from 'react-native';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { fetchQuestions, getMyQuestions } from '../http/api';\r\nimport { HomePageCategoryQuestions, Question } from '../http/contracts';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../constants/Colors';\r\nimport { useIsFocused } from '@react-navigation/native';\r\n// import { Searchbar } from 'react-native-paper';\r\n// const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\r\n\r\nconst draftScreen = 'draft',\r\n  postedScreen = 'posted',\r\n  answeredScreen = 'answered';\r\n\r\nconst cardStyles = StyleSheet.create({\r\n  card: {\r\n    width: 200,\r\n    height: 225,\r\n    margin: 10,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n    borderWidth: 2,\r\n    borderRadius: 15,\r\n    backgroundColor: '#333333',\r\n    alignSelf: 'center',\r\n  },\r\n  cardCover: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: 200,\r\n    height: 150,\r\n    borderWidth: 1,\r\n    alignSelf: 'center',\r\n  },\r\n  cardContent: {\r\n    height: 50,\r\n  },\r\n  cardCaption: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n  cardPosted: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    borderRadius: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    height: 40,\r\n    alignSelf: 'center',\r\n  },\r\n  loaderContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n});\r\n\r\nconst MyQA = ({ navigation }) => {\r\n  const isFocused = useIsFocused();\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const [currentScreen, setCurrentScreen] = useState<string>('draft');\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getquestions() {\r\n      setIsLoading(true);\r\n      const response = await getMyQuestions(loggedInUser, currentScreen);\r\n      setQuestions(response);\r\n      setIsLoading(false);\r\n    }\r\n    if (isFocused) getquestions();\r\n  }, [currentScreen, isFocused]);\r\n\r\n  const switchScreens = (screen: string) => {\r\n    setCurrentScreen(screen);\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n      <View style={{ height: '100%' }} lightColor={spotifyDark}>\r\n        {isLoading ? (\r\n          <View style={[cardStyles.loaderContainer]}>\r\n            <ActivityIndicator animating={true} color={spotifyGreen} />\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <View style={cardStyles.buttonsContainer}>\r\n              <reactNativePaper.Button\r\n                disabled={currentScreen == draftScreen}\r\n                onPress={() => switchScreens(draftScreen)}\r\n              >\r\n                Draft\r\n              </reactNativePaper.Button>\r\n              <reactNativePaper.Button\r\n                disabled={currentScreen === postedScreen}\r\n                onPress={() => switchScreens(postedScreen)}\r\n              >\r\n                Posted\r\n              </reactNativePaper.Button>\r\n              <reactNativePaper.Button\r\n                disabled={currentScreen === answeredScreen}\r\n                onPress={() => switchScreens(answeredScreen)}\r\n              >\r\n                Answered\r\n              </reactNativePaper.Button>\r\n            </View>\r\n            {questions &&\r\n              questions.map((item) => (\r\n                <Card\r\n                  key={item.questionId}\r\n                  style={cardStyles.card}\r\n                  onPress={() =>\r\n                    navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                  }\r\n                >\r\n                  <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                  <Card.Content style={cardStyles.cardContent}>\r\n                    <Title style={cardStyles.cardCaption} numberOfLines={1} ellipsizeMode=\"tail\">\r\n                      {item.caption}\r\n                    </Title>\r\n                    <Paragraph style={cardStyles.cardPosted} numberOfLines={1} ellipsizeMode=\"tail\">\r\n                      {item.postedBy}\r\n                    </Paragraph>\r\n                  </Card.Content>\r\n                </Card>\r\n              ))}\r\n          </>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default MyQA;\r\n","import * as React from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  Searchbar,\r\n  ActivityIndicator,\r\n} from 'react-native-paper';\r\nimport { Text, View } from '../components/Themed';\r\nimport { ScrollView, StyleSheet } from 'react-native';\r\nimport * as reactNativePaper from 'react-native-paper';\r\nimport { fetchQuestions, getQuestionsForSearchQueryApi } from '../http/api';\r\nimport { HomePageCategoryQuestions, Question } from '../http/contracts';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { spotifyDark, spotifyGreen, textColor } from '../constants/Colors';\r\n\r\nconst cardStyles = StyleSheet.create({\r\n  card: {\r\n    width: 200,\r\n    height: 225,\r\n    margin: 10,\r\n    padding: 0,\r\n    overflow: 'hidden',\r\n    borderWidth: 2,\r\n    borderRadius: 15,\r\n    backgroundColor: '#333333',\r\n    alignSelf: 'center',\r\n  },\r\n  cardCover: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: 200,\r\n    height: 150,\r\n    borderWidth: 1,\r\n    alignSelf: 'center',\r\n  },\r\n  cardContent: {\r\n    height: 50,\r\n  },\r\n  cardCaption: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n  cardPosted: {\r\n    fontSize: 10,\r\n    padding: 0,\r\n    color: textColor,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: 'row',\r\n    borderRadius: 20,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n    height: 40,\r\n    alignSelf: 'center',\r\n  },\r\n  loaderContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: spotifyDark,\r\n  },\r\n});\r\n\r\nconst Search = ({ navigation }) => {\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  const [questions, setQuestions] = useState([]);\r\n  const onChangeSearch = (query: React.SetStateAction<string>) => getQuestionsForSearchQuery(query);\r\n  const [searchQuery, setSearchQuery] = React.useState('');\r\n\r\n  const getQuestionsForSearchQuery = async (query: string) => {\r\n    setIsLoading(true);\r\n    setSearchQuery(query);\r\n    if (query == undefined || query == '') {\r\n      setQuestions([]);\r\n    } else {\r\n      const response = await getQuestionsForSearchQueryApi(query);\r\n      setQuestions(response);\r\n      console.log(response);\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar\r\n        placeholder=\"Search\"\r\n        onChangeText={onChangeSearch}\r\n        value={searchQuery}\r\n        autoComplete={true}\r\n      />\r\n      <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n        <View style={{ height: '100%' }} lightColor={spotifyDark}>\r\n          {isLoading ? (\r\n            <View style={[cardStyles.loaderContainer]}>\r\n              <ActivityIndicator animating={true} color={spotifyGreen} />\r\n            </View>\r\n          ) : (\r\n            <>\r\n              {questions &&\r\n                questions.map((item) => (\r\n                  <Card\r\n                    key={item.questionId}\r\n                    style={cardStyles.card}\r\n                    onPress={() =>\r\n                      navigation.navigate('QuestionAnswer', { questionId: item.questionId })\r\n                    }\r\n                  >\r\n                    <Card.Cover style={cardStyles.cardCover} source={{ uri: item.Thumbnail }} />\r\n                    <Card.Content style={cardStyles.cardContent}>\r\n                      <Title style={cardStyles.cardCaption} numberOfLines={1} ellipsizeMode=\"tail\">\r\n                        {item.caption}\r\n                      </Title>\r\n                      <Paragraph\r\n                        style={cardStyles.cardPosted}\r\n                        numberOfLines={1}\r\n                        ellipsizeMode=\"tail\"\r\n                      >\r\n                        {item.postedBy}\r\n                      </Paragraph>\r\n                    </Card.Content>\r\n                  </Card>\r\n                ))}\r\n            </>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome, Octicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport {\r\n  Platform,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Pressable,\r\n  ColorSchemeName,\r\n} from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Text, View } from '../components/Themed';\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport ModalScreen from '../screens/ModalScreen';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport TabOneScreen from '../screens/TabOneScreen';\r\nimport TabTwoScreen from '../screens/TabTwoScreen';\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\nimport AudioRecorder from '../components/audioRecorder/AudioRecorder';\r\nimport Dashboard from '../screens/Dashboard';\r\nimport Login from '../screens/Login';\r\nimport Signup from '../screens/Signup';\r\nimport QuestionAnswer from '../screens/QuestionAnswer';\r\nconst val = 0;\r\nimport QuestionScreen from '../screens/QuestionScreen';\r\nimport DiscussionScreen from '../screens/DiscussionScreen';\r\nimport { useSelector } from 'react-redux';\r\nimport MyQA from '../screens/MyQA';\r\nimport Search from '../screens/Search';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputView: {\r\n    borderColor: '#AEACAB',\r\n    borderWidth: 1,\r\n    width: '70%',\r\n    height: 45,\r\n    marginBottom: 20,\r\n    alignItems: 'center',\r\n  },\r\n  TextInput: {\r\n    height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n    alignItems: 'center',\r\n  },\r\n  loginBtn: {\r\n    width: '70%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: 10,\r\n    margin: 50,\r\n    backgroundColor: '#5D3EA8',\r\n  },\r\n});\r\n\r\nexport default function Navigation(\r\n  { colorScheme }: { colorScheme: ColorSchemeName },\r\n  { navigation }\r\n) {\r\n  const loggedInUser = useSelector((state) => state.generic.loggedInUser);\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}\r\n    >\r\n      {loggedInUser != '' ? (\r\n        <RootNavigator />\r\n      ) : (\r\n        <>\r\n          <RootNavigator1 />\r\n        </>\r\n      )}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\n\r\nconst Stack = createNativeStackNavigator();\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\r\n      </Stack.Group>\r\n      <Stack.Screen name=\"Question\" component={QuestionScreen} />\r\n      <Stack.Screen name=\"Signup\" component={Signup} />\r\n      <Stack.Screen name=\"Login\" component={Login} />\r\n      <Stack.Screen name=\"QuestionAnswer\" component={QuestionAnswer} />\r\n      <Stack.Screen name=\"Record\" component={AudioRecorder} />\r\n      <Stack.Screen name=\"Search\" component={Search} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst Stack1 = createNativeStackNavigator();\r\n\r\nfunction RootNavigator1() {\r\n  return (\r\n    <Stack1.Navigator>\r\n      <Stack1.Screen name=\"Root\" component={BottomTabNavigator1} options={{ headerShown: false }} />\r\n      <Stack1.Screen name=\"Home\" component={Dashboard} />\r\n      <Stack1.Screen name=\"Login\" component={Login} />\r\n      <Stack.Screen name=\"QuestionAnswer\" component={QuestionAnswer} />\r\n      <Stack.Screen name=\"Search\" component={Search} />\r\n      <Stack.Screen name=\"Signup\" component={Signup} />\r\n    </Stack1.Navigator>\r\n  );\r\n}\r\n\r\nconst BottomTab1 = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator1() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab1.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab1.Screen\r\n        name=\"Home\"\r\n        component={Dashboard}\r\n        options={({ navigation }: RootTabScreenProps<'Home'>) => ({\r\n          title: 'Home',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"home\" size={24} color={color} />,\r\n        })}\r\n      />\r\n      <BottomTab1.Screen\r\n        name=\"Search\"\r\n        component={Search}\r\n        options={({ navigation }: RootTabScreenProps<'Search'>) => ({\r\n          title: 'Search',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"search1\" size={24} color={color} />,\r\n        })}\r\n      />\r\n\r\n      <BottomTab1.Screen\r\n        name=\"Login\"\r\n        component={Login}\r\n        options={({ navigation }: RootTabScreenProps<'Login'>) => ({\r\n          title: 'Login',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"login\" size={24} color={color} />,\r\n        })}\r\n      />\r\n    </BottomTab1.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Home\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}\r\n    >\r\n      <BottomTab.Screen\r\n        name=\"Home\"\r\n        component={Dashboard}\r\n        options={({ navigation }: RootTabScreenProps<'Home'>) => ({\r\n          title: 'Home',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"home\" size={24} color={color} />,\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Search\"\r\n        component={Search}\r\n        options={({ navigation }: RootTabScreenProps<'Search'>) => ({\r\n          title: 'Search',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"search1\" size={24} color={color} />,\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"QA\"\r\n        component={MyQA}\r\n        options={{\r\n          title: 'Q/A',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"question\" size={24} color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Record\"\r\n        children={() => <AudioRecorder />}\r\n        options={{\r\n          title: 'Ask Question',\r\n          tabBarIcon: ({ color }) => <FontAwesome name=\"microphone\" size={24} color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Discussion\"\r\n        component={DiscussionScreen}\r\n        options={{\r\n          title: 'Discussions',\r\n          tabBarIcon: ({ color }) => <Octicons name=\"comment-discussion\" size={24} color={color} />,\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Profile\"\r\n        component={Login}\r\n        options={{\r\n          title: 'Profile',\r\n          tabBarIcon: ({ color }) => <AntDesign name=\"user\" size={24} color={color} />,\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n  recordingUri: '',\r\n};\r\n\r\nexport const audioReducer = (state = INITIAL_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_RECORDING_URI':\r\n      return { ...state, recordingUri: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n  loggedInUser: '',\r\n};\r\n\r\nexport const genericReducer = (state = INITIAL_STATE, action: any) => {\r\n  switch (action.type) {\r\n    case 'UPDATE_USER_ISLOGGEDIN':\r\n      return { ...state, loggedInUser: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { audioReducer } from './audioReducer';\r\nimport { genericReducer } from './genericReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  audio: audioReducer,\r\n  generic: genericReducer,\r\n});\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { overallColorScheme, statusBarColorScheme } from './constants/Colors';\r\n\r\nimport useCachedResources from './hooks/useCachedResources';\r\nimport useColorScheme from './hooks/useColorScheme';\r\nimport Navigation from './navigation';\r\nimport { rootReducer } from './redux/reducers/combineReducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <Provider store={store}>\r\n        <SafeAreaProvider>\r\n          <Navigation colorScheme={overallColorScheme} />\r\n          <StatusBar style={statusBarColorScheme} />\r\n        </SafeAreaProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","import { FontAwesome } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport * as React from 'react';\r\n\r\nexport default function useCachedResources() {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...FontAwesome.font,\r\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\r\n        });\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  return isLoadingComplete;\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"static/media/record_button@2x.743bad45.png\";","module.exports = __webpack_public_path__ + \"static/media/record_icon@2x.febc85f0.png\";","module.exports = __webpack_public_path__ + \"static/media/play_button@2x.36edbcf9.png\";","module.exports = __webpack_public_path__ + \"static/media/pause_button@2x.de51d36a.png\";","module.exports = __webpack_public_path__ + \"static/media/stop_button@2x.0ca08c60.png\";","module.exports = __webpack_public_path__ + \"static/media/muted_button@2x.0e652f8f.png\";","module.exports = __webpack_public_path__ + \"static/media/unmuted_button@2x.6529872f.png\";","module.exports = __webpack_public_path__ + \"static/media/track_1@2x.30d0d4a9.png\";","module.exports = __webpack_public_path__ + \"static/media/thumb_1@2x.63fa5719.png\";","module.exports = __webpack_public_path__ + \"static/media/thumb_2@2x.58eed782.png\";"],"sourceRoot":""}